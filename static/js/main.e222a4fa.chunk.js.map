{"version":3,"sources":["App.js","serviceWorker.js","index.js","image/my.jpg"],"names":["Makes","className","href","Works","Skills","Likes","Links","icon","color","src","ChangeDoms","props","userInput","App","useState","setUserInput","id","myIcon","alt","value","onChange","event","target","Boolean","window","location","hostname","match","library","add","fab","fas","far","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.e222a4fa.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useState } from 'react';\nconst Makes = () => {\n  return (\n    <>\n      <h1>Makes</h1>\n      <div className=\"makeList\">\n        <div className=\"makeContent\">\n          <a href=\"https://adoring-dubinsky-d79ae4.netlify.com/\">\n            <h2>Twitter確かめったー</h2>\n          </a>\n          {/* 画像が入る */}\n          <h3>概要</h3>\n          <p>\n            Twitterは時に炎上することがある。\n            このアプリケーションは、そのようなTwitterの炎上を防ぐために、Tweet内容を一度友達に送り、確認を挟んでからTweetできるようなアプリになっている。\n          </p>\n          <h3>使った言語、ライブラリ</h3>\n          <p>\n            フロントサイド: React\n            <br />\n            サーバーサイド: flask\n            <br />\n            データベース: postgreSQL\n            <br />\n            そのた: heroku, Netlify\n          </p>\n          <h3>作った時期</h3>\n          <p>修士1年</p>\n        </div>\n        <div className=\"makeContent\">\n          <a href=\"https://nostalgic-babbage-018e62.netlify.com/\">\n            <h2>YoutubeLearning</h2>\n          </a>\n          {/* 画像が入る */}\n          <h3>概要</h3>\n          <p>Youtubeの動画と字幕で簡易的な英語の学習ができるサイト</p>\n          <h3>使った言語、ライブラリ</h3>\n          <p>\n            フロントサイド: React\n            <br />\n            そのた: Netlify\n          </p>\n          <h3>作った時期</h3>\n          <p>修士1年</p>\n        </div>\n        <div className=\"makeContent\">\n          <a href=\"https://competent-ardinghelli-61de62.netlify.com/\">\n            <h2>Reactで作ったCalender</h2>\n          </a>\n          {/* 画像が入る */}\n          <h3>概要</h3>\n          <p>インターンの選考で出された課題で作成。普通にReactのカレンダー</p>\n          <h3>使った言語、ライブラリ</h3>\n          <p>\n            フロントサイド: React\n            <br />\n            そのた: Netlify\n          </p>\n          <h3>作った時期</h3>\n          <p>修士1年</p>\n        </div>\n        <div className=\"makeContent\">\n          <h2>避けないシューティングゲーム</h2>\n          {/* 画像が入る */}\n          <h3>概要</h3>\n          <p>\n            普通の弾幕ゲームは玉を避ける必要がある。\n            しかし、このゲームでは弾幕の中に文字が混ざっており、弾を避けながら文字をとり、単語にし、単語にできた武器が使えるというゲームである。\n          </p>\n          <h3>使った言語、ライブラリ</h3>\n          <p>Processing</p>\n          <h3>作った時期</h3>\n          <p>学部2年</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst Works = () => {\n  return (\n    <>\n      <h1>Works</h1>\n      <div className=\"workList\">\n        <div className=\"workContent\">\n          <h2>株式会社Odd-E Japan</h2>\n          <p>2019/10 〜 2020/03　フロントエンドエンジニア</p>\n          <p>使用技術: HTML/CSS</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst Skills = () => {\n  return (\n    <>\n      <h1>Skills</h1>\n      <h1>言語</h1>\n      <div className=\"skillList\">\n        <div className=\"skillContent\">\n          <h2>JavaScript</h2>\n          <p>できる度: まあまあ</p>\n          <p>経験: 研究室の投票システム作ったりとか、Reactとか</p>\n        </div>\n        <div className=\"skillContent\">\n          <h2>Python</h2>\n          <p>できる度: まあまあ</p>\n          <p>\n            経験: 研究で使ったり、flaskとか、mecabとか、自然言語処理(笑)とか\n          </p>\n        </div>\n        <div className=\"skillContent\">\n          <h2>C言語</h2>\n          <p>できる度: まじちょっと</p>\n          <p>経験: printf('授業で使ってから使ってないよ。');</p>\n        </div>\n        <div className=\"skillContent\">\n          <h2>Processing</h2>\n          <p>できる度: まじちょっと</p>\n          <p>\n            経験:\n            シューティングゲーム作ったり、授業で使ったり。もうほとんど使ってないよ。\n          </p>\n        </div>\n        <div className=\"skillContent\">\n          <h2>PHP</h2>\n          <p>できる度: まじちょっと</p>\n          <p>経験: 卒研の時実験をするためのプラットフォーム作るのに使ったよ</p>\n        </div>\n      </div>\n      <h1>ライブラリ</h1>\n      <div className=\"skillList\">\n        <div className=\"skillContent\">\n          <h2>React</h2>\n          <p>できる度: まあまあ</p>\n          <p>経験: 自作アプリ作ったり</p>\n        </div>\n        <div className=\"skillContent\">\n          <h2>flask</h2>\n          <p>できる度: まじちょっと</p>\n          <p>経験: 自作アプリ作ったり</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst Likes = () => {\n  return (\n    <>\n      <h1>Likes</h1>\n      <div className=\"likeList\">\n        <div className=\"likeContent\">\n          <h2>音楽</h2>\n          {/* 画像が入る */}\n          <p>\n            この頃はテクノ、ファンク系をspotifyで開拓している。ロック、ジャズ、テクノ、ヒップポップ、ファンク…基本的に幅広く\n          </p>\n        </div>\n        <div className=\"likeContent\">\n          <h2>本</h2>\n          {/* 画像が入る */}\n          <p>\n            下記リンクが読書メーターです。良かったら友達になって…。ミステリと森見登美彦、中島らもなど\n          </p>\n          <a href=\"https://bookmeter.com/users/991028\">読書メーター</a>\n        </div>\n        <div className=\"likeContent\">\n          <h2>映画</h2>\n          {/* 画像が入る */}\n          <p>\n            ミステリとSFが好き。しかし、ほとんどのジャンル分け隔てなく見はする。\n            クリストファーノーラン、クエンティンタランティーノ、エドガーライト、デヴィッド・フィンチャー、スタンリーキューブリックなど\n          </p>\n        </div>\n        <div className=\"likeContent\">\n          <h2>アニメ</h2>\n          {/* 画像が入る */}\n          <p>\n            この頃はアメリカのカトゥーンアニメを見た記憶しかない(Rick and\n            Morty、The Simpsons、South\n            Park)。基本的には、ミステリとSF。ライトノベル系は0年代の世界系などの系列がSF色が強くて好き。しかし、この頃アニメはマジで見ない\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst Links = () => {\n  return (\n    <>\n      <h1>Links</h1>\n      <div className=\"container\">\n        <a href=\"https://twitter.com/ifhito\">\n          <FontAwesomeIcon\n            className=\"icons\"\n            icon={['fab', 'twitter']}\n            color=\"black\"\n          />\n        </a>\n        <a href=\"https://github.com/monaural-type\">\n          <FontAwesomeIcon\n            className=\"icons\"\n            icon={['fab', 'github']}\n            color=\"black\"\n          />\n        </a>\n        <a href=\"https://note.com/ifhito\">\n          <img src=\"https://yossense.com/images/article/note.svg\"></img>\n        </a>\n      </div>\n    </>\n  );\n};\nconst Prof = () => {\n  return (\n    <>\n      <h1>Profile</h1>\n      <div className=\"profList\">\n        <p>skill</p>\n        <p>work</p>\n        <p>link</p>\n        <p>like</p>\n        <p>make</p>\n      </div>\n    </>\n  );\n};\n\nconst ChangeDoms = (props) => {\n  const userInput = props.userInput;\n  // const flag = props.flag;\n  // if (flag == false) {\n  //   return (\n  //     <div>\n  //       I believe that you will search for my <strong>prof</strong>...\n  //     </div>\n  //   );\n  // }\n  if (userInput == 'work') {\n    return <Works />;\n  } else if (userInput == 'make') {\n    return <Makes />;\n  } else if (userInput == 'skill') {\n    return <Skills />;\n  } else if (userInput == 'like') {\n    return <Likes />;\n  } else if (userInput == 'link') {\n    return <Links />;\n  } else {\n    return (\n      <div className=\"profSentence\">\n        Thank u to visit this <strong>link</strong>!!\n        <br />\n        I am a student of computer science.\n        <br />\n        Through making some applications, I have brushed up a{' '}\n        <strong>skill</strong>.<br />\n        Also I had got a pat time <strong>work</strong>ing which{' '}\n        <strong>make</strong> applications.\n        <br />I <strong>like</strong> watching movies, music and so on.\n      </div>\n    );\n  }\n};\nconst App = (props) => {\n  const [userInput, setUserInput] = useState('');\n  // const [flag, setFlag] = useState(false);\n  const handleChange = (event) => {\n    // if (flag != true && event.target.value == 'prof') {\n    //   setFlag(true);\n    // }\n    setUserInput(event.target.value);\n  };\n\n  return (\n    <div id=\"all\">\n      {/* <div className=\"title\">About Me</div> */}\n      <div className=\"aboutMe\">\n        <img className=\"myIconImage\" src={props.myIcon} alt=\"myIcon\" />\n        <div className=\"name\">HOTAKE</div>\n      </div>\n      <input\n        className=\"positionInput\"\n        value={userInput}\n        onChange={handleChange}\n      />\n      <div className=\"allContainer\">\n        <ChangeDoms userInput={userInput} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport myIcon from './image/my.jpg';\nimport * as serviceWorker from './serviceWorker';\nimport { library } from '@fortawesome/fontawesome-svg-core'; //fontawesomeのコアファイル\nimport { fab } from '@fortawesome/free-brands-svg-icons'; //fontawesomeのbrandアイコンのインポート\nimport { fas } from '@fortawesome/free-solid-svg-icons'; //fontawesomeのsolidアイコンのインポート\nimport { far } from '@fortawesome/free-regular-svg-icons'; //fontawesomeのregularアイコンのインポート\n\nlibrary.add(fab, fas, far); //他のコンポーネントから簡単に呼び出せるようにするための登録処理\nReactDOM.render(\n  <React.StrictMode>\n    <App myIcon={myIcon} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/my.b2c9793b.jpg\";"],"sourceRoot":""}